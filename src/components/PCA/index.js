import { getFilteredData } from '../../utils/stateManager' // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
import { applyPCA } from './pca'
import { renderPCA } from './renderPCA'

/**
 * –§—É–Ω–∫—Ü—ñ—è –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö (–ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –∑–º—ñ–Ω—ñ—Ç—å —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é)
 * @param {Array} data - –í—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤ –¥–∞–Ω–∏—Ö.
 * @returns {Array} - –ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤ –¥–∞–Ω–∏—Ö.
 */
function normalizeData (data) {
  // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –±–µ–∑ –∑–º—ñ–Ω.
  return data
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É PCA –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –æ–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (Genre –∞–±–æ Platform).
 * @param {String} selectedCategory - 'Genre' –∞–±–æ 'Platform'
 */
export function updatePCA (selectedCategory) {
  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ (–≤—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ —á–µ—Ä–µ–∑ stateManager)
    const rawData = getFilteredData()
    console.log('üìä –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è PCA:', rawData)

    if (!rawData || rawData.length === 0) {
      console.warn('‚ö† –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è PCA.')
      return
    }

    // 1. –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
    const normalizedData = normalizeData(rawData)

    // 2. –û–±—á–∏—Å–ª–µ–Ω–Ω—è PCA (–¥–æ–¥–∞—é—Ç—å—Å—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ pc1 —Ç–∞ pc2 –¥–æ –∫–æ–∂–Ω–æ–≥–æ –æ–±‚Äô—î–∫—Ç–∞)
    const pcaData = applyPCA(normalizedData)

    // 3. –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –æ–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è —Ñ–∞—Ä–±—É–≤–∞–Ω–Ω—è
    renderPCA(pcaData, selectedCategory)
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ PCA:', error)
  }
}
