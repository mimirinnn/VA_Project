import { applyPCA } from './PCA'
import { renderPCA } from './renderPCA'
import { fetchChartData } from '../../utils/api'

/**
 * –ü—Ä–∏–∫–ª–∞–¥ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö.
 * –Ø–∫—â–æ —É –≤–∞—Å —î —ñ–Ω—à–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è ‚Äì –∑–∞–º—ñ–Ω—ñ—Ç—å —ó—ó.
 * @param {Array} data - –ú–∞—Å–∏–≤ –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö.
 * @returns {Array} - –ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤ –¥–∞–Ω–∏—Ö.
 */
function normalizeData (data) {
  // –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –±–µ–∑ –∑–º—ñ–Ω.
  return data
}

/**
 * –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ PCA.
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ, –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î —ó—Ö, –∑–∞—Å—Ç–æ—Å–æ–≤—É—î PCA —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 * @param {Object} filters - –§—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö.
 */
export async function updatePCA (filters) {
  try {
    const rawData = await fetchChartData(filters)
    console.log('üìä –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è PCA:', rawData)

    if (!rawData || rawData.length === 0) {
      console.warn('‚ö† –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è PCA.')
      return
    }

    // 1. –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
    const normalizedData = normalizeData(rawData)

    // 2. –û–±—á–∏—Å–ª–µ–Ω–Ω—è PCA
    const pcaData = applyPCA(normalizedData)

    // 3. –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é D3.js
    renderPCA(pcaData)
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ PCA:', error)
  }
}
