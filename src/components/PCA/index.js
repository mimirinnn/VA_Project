import { getFilteredData } from '../../utils/stateManager'
import { applyPCA } from './PCA'
import { renderPCA } from './renderPCA'

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É PCA –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –æ–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (Genre –∞–±–æ Platform).
 * –û–±—á–∏—Å–ª—é—î—Ç—å—Å—è PCA (—Ä–∞–∑–æ–º —ñ–∑ –¥–≤–æ–º–∞ —Ç–∏–ø–∞–º–∏ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó) —ñ –≤—ñ–∑—É–∞–ª—ñ–∑—É—é—Ç—å—Å—è –¥–∞–Ω—ñ.
 * @param {String} selectedCategory - 'Genre' –∞–±–æ 'Platform'.
 */
export function updatePCA (selectedCategory) {
  try {
    const rawData = getFilteredData()
    console.log('üìä –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è PCA:', rawData)

    if (!rawData || rawData.length === 0) {
      console.warn('‚ö† –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è PCA.')
      return
    }

    // –û–±—á–∏—Å–ª–µ–Ω–Ω—è PCA, PCA-based –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó –∑–∞ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ–¥–∞–∂—ñ–≤
    const pcaData = applyPCA(rawData)
    console.log('üìä –î–∞–Ω—ñ –ø—ñ—Å–ª—è PCA —ñ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—ó:', pcaData)

    // –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è, —è–∫–∞ –ø–æ–∫–∞–∑—É—î –¥–∞–Ω—ñ —ñ–∑ —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–æ—é –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—î—é
    renderPCA(pcaData, selectedCategory)
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ PCA:', error)
  }
}
